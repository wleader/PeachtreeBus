<Assembly xmlns="http://tempuri.org/LogMessages.xsd" assemblyId="1" exludeFromCodeCoverage="false">
    <Usings>
        <Using>PeachtreeBus.Data</Using>
        <Using>PeachtreeBus.Sagas</Using>
        <Using>PeachtreeBus.ClassNames</Using>
    </Usings>
    <Namespace name="PeachtreeBus.Data" namespaceId="2">
        <Class name="DapperDataAccess" classId="1">
            <Event name="DataAccessError" level="Error" exception="true" eventId="1">
                There was an exception interacting with the database. Method: {Method:string}.
            </Event>
        </Class>
    </Namespace>
    <Namespace name="PeachtreeBus.Queues" namespaceId="3">
        <Class name="QueueReader" classId="1">
            <Event name="HeaderNotDeserializable" level="Warning" eventId="1">
                Headers could not be deserialized for message {MessageId:UniqueIdentity} from queue {QueueName:QueueName}.
            </Event>
            <Event name="BodyNotDeserializable" level="Warning" exception="true" eventId="2">
                Body could not be deserialized for message {MessageId:UniqueIdentity} from queue {QueueName:QueueName}.
            </Event>
            <Event name="MessageClassNotRecognized" level="Warning" eventId="3">
                Message class '{MessageClass:ClassName}' was not recognized for message {MessageId:UniqueIdentity} from queue {QueueName:QueueName}.
            </Event>
            <Event name="MessageFailed" level="Warning" eventId="4">
                Message {MessageId:UniqueIdentity} from queue {QueueName:QueueName} has failed and will not be retried.
            </Event>
            <Event name="MessageWillBeRetried" level="Warning" eventId="5">
                Message {MessageId:UniqueIdentity} from queue {QueueName:QueueName} will be retried after {NotBefore:DateTime}.
            </Event>
            <Event name="LoadingSagaData" level="Information" eventId="6">
                Loading saga data for {SagaName:SagaName} - {SagaKey:SagaKey}.
            </Event>
            <Event name="DeletingSagaData" level="Information" eventId ="7">
                Deleting saga data for {SagaName:SagaName} - {SagaKey:SagaKey}.
            </Event>
            <Event name="SavingSagaData" level="Information" eventId="8">
                Saving saga data for {SagaName:SagaName} - {SagaKey:SagaKey}.
            </Event>
        </Class>
        <Class name="QueuePipelineFinalStep" classId="2">
            <Event name="LoadingSaga" eventId="1">
                Saga Loading {SagaType:string} {SagaKey:SagaKey}.
            </Event>
            <Event name="InvokeHandler" level="Debug" eventId="2">
                Handling message {MessageId:UniqueIdentity} of type {MessageClass:ClassName} with {HandlerType:string}.
            </Event>
            <Event name="SagaSaved" level="Debug" eventId="3">
                Saga Saved {SagaType:string} {SagaKey:SagaKey}.
            </Event>
            <Event name="HandlerException" level="Warning" exception="true" eventId="4">
                There was an exception in {HandlerType:string} when handling Message {MessageId:UniqueIdentity} of type {MessageType:ClassName}.
            </Event>
            <Event name="SagaNotStarted" level="Information" eventId="5">
                The saga {SagaType:string} for key '{SagaKey:SagaKey}' has not been started, or has completed. The Message {MessageId:UniqueIdentity} will not be handled by the saga.
            </Event>
        </Class>
        <Class name="QueueFailures" classId="3">
            <Event name="NoHandler" level="Error" exception="true" eventId="1">
                No implemenation of IHandleFailedQueueMessages was available. You can register DefaultFailedQueueMessageHandler with your dependency injection provider to disable this message.
            </Event>
            <Event name="HandlerThrow" level="Error" exception="true" eventId="2">
                Failed Queue Message Handler {HandlerType:Type} threw an exception while handling a message of type {MessageType:Type}. Database will be rolled back.
            </Event>
            <Event name="MessageFailed" level="Warning" eventId="3">
                A queue message of type {MessageType:Type} exceeded its maximum retries and has failed.
            </Event>
        </Class>
        <Class name="ProcessQueuedTask" classId="4">
            <Event name="ProcessingMessage" level="Debug" eventId="1">
                Processing Message {MessageId:UniqueIdentity}, Type: {MessageClass:ClassName}.
            </Event>
            <Event name="SagaBlocked" level="Information" eventId="2">
                The saga {SagaType:string} for key {SagaKey:SagaKey} is blocked. The current message will be delayed and retried.
            </Event>
            <Event name="HandlerException" level="Warning" exception="true" eventId="3">
                There was an exception in {HandlerType:string} when handling Message {MessageId:UniqueIdentity} of type {MessageType:ClassName}.
            </Event>
        </Class>
    </Namespace>
    <Namespace name="PeachtreeBus.Subscriptions" namespaceId="4">
        <Class name="SubscribedPipelineFinalStep" classId="1">
            <!-- these log messages moved. Retaining class element to reserve class Id. -->
        </Class>
        <Class name="SubscribedReader" classId="2">
            <Event name="MessageFailed" level="Warning" eventId="1">
                Message {MessageId:UniqueIdentity} for Subscriber {SubscriberId:SubscriberId} has failed and will not be retried.
            </Event>
            <Event name="HeaderNotDeserializable" level="Warning" eventId="2">
                Headers could not be deserialized for message {MessageId:UniqueIdentity} for subscriber {SubscriberId:SubscriberId}.
            </Event>
            <Event name="BodyNotDeserializable" level="Warning" exception="true" eventId="3">
                Message Body could not be deserialized for message {MessageId:UniqueIdentity} for subscriber {SubscriberId:SubscriberId}.
            </Event>
            <Event name="MessageClassNotRecognized" level="Warning" eventId="4">
                Message class '{MessageClass:ClassName}' was not recognized for message {MessageId:UniqueIdentity} for subscriber {SubscriberId:SubscriberId}.
            </Event>
            <Event name="MessageWillBeRetried" level="Warning" eventId="5">
                Message {MessageId:UniqueIdentity} from Subscriber {SubscriberId:SubscriberId} will be retried after {NotBefore:DateTime}.
            </Event>
        </Class>
        <Class name="SubscribedFailures" classId="3">
            <Event name="NoHandler" level="Error" exception="true" eventId="1">
                No implemenation of IHandleFailedSubscribedMessages was available. You can register DefaultFailedSubscribedMessageHandler with your dependency injection provider to disable this message.
            </Event>
            <Event name="HandlerThrow" level="Error" exception="true" eventId="2">
                Failed Subscribed Message Handler {HandlerType:Type} threw an exception while handling a message of type {MessageType:Type}. Database will be rolled back.
            </Event>
            <Event name="MessageFailed" level="Warning" eventId="3">
                A subscribed message of type {MessageType:Type} exceeded its maximum retries and has failed.
            </Event>
        </Class>
        <Class name="ProcessSubscribedTask" classId="4">
            <Event name="MessageHandlerException" level="Warning" exception="true" eventId="1">
                There was an exception while processing message {MessageId:UniqueIdentity} for subscriber {SusbscriberId:SubscriberId}.
            </Event>
            <Event name="ProcessingMessage" level="Debug" eventId="1">
                Processing message {MessageId:UniqueIdentity} for subscriber {SubscriberId:SubscriberId}.
            </Event>
        </Class>
    </Namespace>
    <Namespace name="PeachtreeBus.Errors" namespaceId="5">
        <Class name="CircuitBreaker" classId="3">
            <Event name="Cleared" level="Warning" exception="false" eventId="1">
                The Circuit Breaker '{FriendlyName:string}' is cleared.
            </Event>
            <Event name="Armed" level="Warning" exception="false" eventId="2">
                The Circuit Breaker '{FriendlyName:string}' is armed.
            </Event>
            <Event name="Faulted" level="Warning" exception="false" eventId="3">
                The Circuit Breaker '{FriendlyName:string}' is faulted.
            </Event>
        </Class>
    </Namespace>
    <Namespace name="PeachtreeBus.Tasks" namespaceId="6">
        <Class name="Runner" classId="1" genericArgs="TBaseTask" genericConstraint="where TBaseTask : IBaseTask">
            <Event name="RollbackFailed" level="Error" exception="true" eventId="1">
                Failed to rollback transaction.
            </Event>
            <Event name="TaskException" level="Error" exception="true" eventId="2">
                The task threw an exception.
            </Event>
        </Class>
        <Class name="Starters" classId="2">
            <Event name="StarterException" level="Error" exception="true" eventId="1">
                The starter threw an exception. Starter: {StarterType:Type}.
            </Event>
        </Class>
        <Class name="Starter" classId="3" genericArgs="TRunner" genericConstraint="where TRunner : class, IRunner">
            <Event name="StarterException" level="Error" exception="true" eventId="1">
                There was an exception while estimating how many runners to start. No runners will be started. Starter: {StarterType:Type}.
            </Event>
        </Class>
    </Namespace>
    <Namespace name="PeachtreeBus.Management" namespaceId="7">
        <Class name="ManagementDataAccess" classId="1">
            <Event name="DataAccessError" level="Error" exception="true" eventId="1">
                There was an exception interacting with the database. Method: {Method:string}.
            </Event>
        </Class>
    </Namespace>
</Assembly>
